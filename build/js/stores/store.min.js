var Dispatcher=require("../dispatcher/dispatcher.js"),Constants=require("../constants/constants.js"),EventEmitter=require("events").EventEmitter,Merge=require("react/lib/merge"),ActionTypes=Constants.ActionTypes,LoadStates=Constants.LoadStates,CHANGE_EVENT="change",_name="",_loadState=LoadStates.INIT,NameStore=Merge(EventEmitter.prototype,{emitChange:function(){this.emit(CHANGE_EVENT)},addChangeListener:function(e){this.on(CHANGE_EVENT,e)},removeChangeListener:function(e){this.removeListener(CHANGE_EVENT,e)},loadState:function(){return _loadState},getName:function(){return _name}});NameStore.dispatchToken=Dispatcher.register(function(e){var t=e.action;switch(t.type){case ActionTypes.RECEIVED_RAW_NAME:_name=t.rawName,_loadState=LoadStates.LOADED,NameStore.emitChange()}}),module.exports=NameStore;